#include <vector>
#include <iostream>
#include <cmath>
#include <string>
#include <algorithm>
#include <cctype>  // Adicionado para isdigit
using namespace std;

bool validarEntrada(const string & entrada, int& n) {
    // Verifica se a string está vazia
    if (entrada.empty()) {
        return false;
    }
    
    // Verifica se todos os caracteres são dígitos
    for (char c : entrada) {
        if (!isdigit(c)) {
            return false;
        }
    }
    
    // Converte para número e verifica se é maior que 0
    try {
        n = stoi(entrada);
        return n > 0;
    } catch (const exception& e) {
        return false;
    }
}

bool ehPrimo(int numero) {
    if (numero <= 1) return false;
    if (numero == 2) return true;
    if (numero % 2 == 0) return false;

    int limite = static_cast<int>(sqrt(numero));

    for (int i = 3; i <= limite; i += 2) {
        if (numero % i == 0) {
            return false;
        }
    }
    return true;
}

int main() {
    string entrada;
    int n;
    
    while (true) {
        cout << "Digite um numero inteiro maior que 0: ";
        getline(cin, entrada);
        
        if (validarEntrada(entrada, n)) {
            break;
        } else {
            cout << "Entrada invalida! Digite apenas numeros inteiros maiores que 0." << endl;
        }
    }

    vector<int> primos;

    cout << "Valor de N: " << n << endl;
    cout << "Numeros primos encontrados:" << endl;

    for (int i = 2; i <= n; i++) {
        if (ehPrimo(i)) {
            primos.push_back(i);
        }
    }

    // Exibe os números primos (10 por linha para melhor visualização)
    for (vector<int>::size_type i = 0; i < primos.size(); i++) {
        cout << primos[i];
        
        if (i < primos.size() - 1) {
            cout << ", ";
        }
        
        if ((i + 1) % 10 == 0) {
            cout << endl;
        }
    }

    cout << endl << "Quantidade de numeros primos encontrados: " << primos.size() << endl;
    
    return 0;
}
